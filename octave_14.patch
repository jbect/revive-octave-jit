# HG changeset patch
# User Julien Bect <jbect@users.sourceforge.net>
# Date 1502222450 -7200
#      Tue Aug 08 22:00:50 2017 +0200
# Node ID b551453310d7f3d1e0c8eac76fe920e794591505
# Parent  d9b35ab35b6fe3e9bab85043d66d58e9048730fe
jit: Use nullptr (instead of 0 or NULL) as much as possible

diff -r d9b35ab35b6f -r b551453310d7 libinterp/parse-tree/jit-ir.cc
--- a/libinterp/parse-tree/jit-ir.cc	Mon Jul 24 13:49:15 2017 +0200
+++ b/libinterp/parse-tree/jit-ir.cc	Tue Aug 08 22:00:50 2017 +0200
@@ -363,9 +363,8 @@
   jit_terminator *
   jit_block::terminator (void) const
   {
-    assert (this);
     if (instructions.empty ())
-      return 0;
+      return nullptr;
 
     jit_instruction *last = instructions.back ();
     return dynamic_cast<jit_terminator *> (last);
diff -r d9b35ab35b6f -r b551453310d7 libinterp/parse-tree/jit-typeinfo.cc
--- a/libinterp/parse-tree/jit-typeinfo.cc	Mon Jul 24 13:49:15 2017 +0200
+++ b/libinterp/parse-tree/jit-typeinfo.cc	Tue Aug 08 22:00:50 2017 +0200
@@ -1205,12 +1205,12 @@
     grab_fn.add_overload (create_identity (index));
 
     // release any
-    fn = create_external (JIT_FN (octave_jit_release_any), 0, any);
+    fn = create_external (JIT_FN (octave_jit_release_any), nullptr, any);
     release_fn.add_overload (fn);
     release_fn.stash_name ("release");
 
     // release matrix
-    fn = create_external (JIT_FN (octave_jit_release_matrix), 0, matrix);
+    fn = create_external (JIT_FN (octave_jit_release_matrix), nullptr, matrix);
     release_fn.add_overload (fn);
 
     // destroy
@@ -1236,7 +1236,7 @@
     add_binary_fcmp (scalar, octave_value::op_gt, llvm::CmpInst::FCMP_UGT);
     add_binary_fcmp (scalar, octave_value::op_ne, llvm::CmpInst::FCMP_UNE);
 
-    jit_function gripe_div0 = create_external (JIT_FN (warn_divide_by_zero), 0);
+    jit_function gripe_div0 = create_external (JIT_FN (warn_divide_by_zero), nullptr);
     gripe_div0.mark_can_error ();
 
     // divide is annoying because it might error
@@ -1509,7 +1509,7 @@
     logically_true_fn.stash_name ("logically_true");
 
     jit_function gripe_nantl
-      = create_external (JIT_FN (octave_jit_err_nan_to_logical_conversion), 0);
+      = create_external (JIT_FN (octave_jit_err_nan_to_logical_conversion), nullptr);
     gripe_nantl.mark_can_error ();
 
     fn = create_internal ("octave_jit_logically_true_scalar", boolean, scalar);
@@ -1572,9 +1572,9 @@
     jit_type *jit_int = intN (sizeof (int) * 8);
     llvm::Type *int_t = jit_int->to_llvm ();
     jit_function ginvalid_index
-      = create_external (JIT_FN (octave_jit_ginvalid_index), 0);
+      = create_external (JIT_FN (octave_jit_ginvalid_index), nullptr);
     jit_function gindex_range = create_external (JIT_FN (octave_jit_gindex_range),
-                                                 0, jit_int, jit_int, index,
+                                                 nullptr, jit_int, jit_int, index,
                                                  index);
 
     fn = create_internal ("()subsref", scalar, matrix, scalar);
@@ -1894,7 +1894,7 @@
     std::stringstream name;
     name << "octave_jit_print_" << ty->name ();
     jit_function fn = create_external (engine, fptr, name.str (),
-                                       0, intN (8), ty);
+                                       nullptr, intN (8), ty);
     print_fn.add_overload (fn);
   }
 
diff -r d9b35ab35b6f -r b551453310d7 libinterp/parse-tree/jit-util.h
--- a/libinterp/parse-tree/jit-util.h	Mon Jul 24 13:49:15 2017 +0200
+++ b/libinterp/parse-tree/jit-util.h	Tue Aug 08 22:00:50 2017 +0200
@@ -140,7 +140,9 @@
   public:
     typedef jit_internal_list<LIST_T, NODE_T> jit_ilist;
 
-    jit_internal_node (void) : mvalue (0), mnext (0), mprev (0) { }
+    jit_internal_node (void)
+      : mvalue (nullptr), mnext (nullptr), mprev (nullptr)
+    { }
 
     ~jit_internal_node (void) { remove (); }
 
